Задача A: Числа Фибоначчи

#include <bits/stdc++.h>

using namespace std;

int f(int x) {
    if (x == 1 || x == 2) {
        return 1;
    }
    return f(x - 2) + f(x - 1);
}

int main() {
    int n;
    cin >> n;
    cout << f(n);
    return 0;
}



Задача B: Без трех единиц

#include <bits/stdc++.h>

using namespace std;

int f(int x, int s) {
    if (x == 1) {
        if (s < 2) {
            return 2;
        }
        return 1;
    }
    if (s < 2) {
        return f(x - 1, 0) + f(x - 1, s + 1);
    }
    return f(x - 1, 0);
}

int main() {
    int n;
    cin >> n;
    cout << f(n, 0);
    return 0;
}



Задача C: Платная лестница

#include <bits/stdc++.h>

using namespace std;

int f(int x, vector<int>& v, vector<int>& memo) {
    int m1, m2;
    if (x == 0) {
        return 0;
    }
    if (x == 1) {
        return v[1];
    }
    if (x == 2) {
        return v[2];
    }
    if (memo[x - 2] == 0) {
        memo[x - 2] = f(x - 2, v, memo);
        m2 = memo[x - 2];
    } else {
        m2 = memo[x - 2];
    }
    if (memo[x - 1] == 0) {
        memo[x - 1] = f(x - 1, v, memo);
        m1 = memo[x - 1];
    } else {
        m1 = memo[x - 1];
    }
    return v[x] + min(m1, m2);
}

int main() {
    int n, a;
    vector<int> v;
    cin >> n;
    vector<int> memo(n + 1, 0);
    v.push_back(0);
    for (int i = 0; i < n; i++) {
        cin >> a;
        v.push_back(a);
    }
    memo[1] = v[1];
    memo[2] = v[2];
    cout << f(n, v, memo);
    return 0;
}



Задача D: Маршрут максимальной стоимости

одный код
#include <iostream>
#include <string>
#include <vector>

int main() {
    int n, m, a;
    std::cin >> n >> m;
    std::vector<std::vector<int>> v(n + 1, std::vector <int> (m + 1));
    std::vector<std::vector<std::string>> v1(n + 1, std::vector<std::string> (m + 1, ""));
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= m; j++) {
            std::cin >> v[i][j];
        }
    }
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= m; j++) {
            if (v[i - 1][j] < v[i][j - 1]) {
                v[i][j] += v[i][j - 1];
                v1[i][j] = v1[i][j - 1] + 'R';
            } else {
                v[i][j] += v[i - 1][j];
                v1[i][j] = v1[i - 1][j] + 'D';
            }
        }
    }
    std::cout << v[n][m] << '\n';
    for (int i = 1; i <= n + m - 2; i++) {
        std::cout << v1[n][m][i] << ' ';
    }
    return 0;
}



Задача E: Взрывоопасность-2

#include <iostream>

int f(int x, int s) {
    if (x == 1) {
        if (s < 1) {
            return 3;
        }
        return 2;
    }
    if (s < 1) {
        return 2 * f(x - 1, 0) + f(x - 1, s + 1);
    }
    return 2 * f(x - 1, 0);
}

int main() {
    int n;
    std::cin >> n;
    std::cout << f(n, 0);
    return 0;
}



Задача F: Шашку - в дамки

#include <iostream>

int f(int a, int b) {
    if (b == 8) {
        return 1;
    }
    if (a == 1) {
        return f(a + 1, b + 1);
    }
    if (a == 8) {
        return f(a - 1, b + 1);
    }
    return f(a + 1, b + 1) + f(a - 1, b + 1);
}

int main() {
    int n, m;
    std::cin >> n >> m;
    std::cout << f(n, m);
    f(n, m);
    return 0;
}



Задача G: Ход конем

#include <iostream>
#include <vector>

int f(int a, int b, int n, int m, std::vector<std::vector<int>> &v) {
    if (a == n && b == m) {
        return 1;
    }
    if (2 * (n - a) < m - b || 2 * (m - b) < n - a) {
        return 0;
    }
    if (v[a + 1][b + 2] == 0) {
        v[a + 1][b + 2] = f(a + 1, b + 2, n, m, v);
    }
    if (v[a + 2][b + 1] == 0) {
        v[a + 2][b + 1] = f(a + 2, b + 1, n, m, v);
    }
    return v[a + 1][b + 2] + v[a + 2][b + 1];
}

int main() {
    int n, m;
    std::cin >> n >> m;
    std::vector<std::vector<int>> v(n + 2, std::vector<int>(m + 2));
    if ((n + m - 2) % 3 == 0) {
        std::cout << f(1, 1, n, m, v);
    } else {
        std::cout << 0;
    }
    return 0;
}



Задача H: Ход конем - 2

#include <iostream>
#include <vector>

int f(int a, int b, int n, int m, std::vector<std::vector<int>> &v) {
    if (a == n && b == m) {
        return 1;
    }
    if (a <= 1 || b <= 1 || a > n || b > m) {
        return 0;
    }
    if (v[a + 1][b + 2] == 0) {
        v[a + 1][b + 2] = f(a + 1, b + 2, n, m, v);
    }
    if (v[a + 2][b + 1] == 0) {
        v[a + 2][b + 1] = f(a + 2, b + 1, n, m, v);
    }
    if (v[a - 1][b + 2] == 0) {
        v[a - 1][b + 2] = f(a - 1, b + 2, n, m, v);
    }
    if (v[a + 2][b - 1] == 0) {
        v[a + 2][b - 1] = f(a + 2, b - 1, n, m, v);
    }
    return v[a + 1][b + 2] + v[a + 2][b + 1] + v[a - 1][b + 2] + v[a + 2][b - 1];
}

int main() {
    int n, m;
    std::cin >> n >> m;
    std::vector<std::vector<int>> v(n + 4, std::vector<int>(m + 4));
    std::cout << f(2, 2, n + 1, m + 1, v);
    return 0;
}



