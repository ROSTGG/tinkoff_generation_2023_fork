A	Поиск числа

#include <bits/stdc++.h>

using namespace std;

int main() {
    int a, b, x;
    cin >> a;
    x = 0;
    for (int i = 0; i < a; i++) {
        cin >> b;
        x = x ^ b;
    }
    cout << x;
}



B	RSQ 1D

#include <bits/stdc++.h>

using namespace std;

int main() {
    long long a, b, c, x;
    vector <long long> s1, s2;
    cin >> a;
    x = 0;
    s1.push_back(0);
    for (int i = 0; i < a; i++) {
        cin >> b;
        x += b;
        s1.push_back(x);
    }
    cin >> a;
    for (int i = 0; i < a; i++) {
        cin >> b >> c;
        s2.push_back(s1[c] - s1[b - 1]);
    }
    for (int i = 0; i < a; i++) {
        cout << s2[i] << ' ';
    }
    return 0;
}



C	RDQ 1D

#include <bits/stdc++.h>

using namespace std;

int main() {
    long long n, q, l, r, d;
    cin >> n >> q;
    vector <long long> s(n + 2), s1;
    for (int i = 0; i < q; i++) {
        cin >> l >> r >> d;
        s[l] += d;
        s[r + 1] -= d;
    }
    s1.push_back(0);
    for (int i = 1; i <= n; i++) {
        s1.push_back(s1[i - 1] + s[i]);
    }
    for (int i = 1; i <= n; i++) {
        cout << s1[i] << ' ';
    }
}



D	RSQ 2D

#include <bits/stdc++.h>

using namespace std;

int main() {
    long long n, m, x1, y1, x2, y2;
    vector<long long> x;
    cin >> n >> m;
    vector< vector<long long> > s(n + 1, vector<long long>(m + 1));
    // vector <vector <int> (m + 1)> s(n + 1);
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= m; j++) {
            cin >> x1;
            s[i][j] = s[i][j - 1] + s[i - 1][j] - s[i - 1][j - 1] + x1;
        }
    }
    cin >> n;
    for (int i = 0; i < n; i++) {
        cin >> x1 >> y1 >> x2 >> y2;
        x.push_back(s[x2][y2] + s[x1 - 1][y1 - 1] - s[x2][y1 - 1] - s[x1 - 1][y2]);
    }
    for (int i = 0; i < n; i++) {
        cout << x[i] << " ";
    }
}



G	Отрезок с максимальной суммой

#include <bits/stdc++.h>

using namespace std;

int main() {
    long long a, b, l, x, lm, rm, m;
    vector <long long> s;
    cin >> a;
    x = 0;
    s.push_back(0);
    for (int i = 0; i < a; i++) {
        cin >> b;
        x += b;
        s.push_back(x);
    }
    l = 1;
    m = INT_MIN;
    for (int i = 1; i <= a; i++) {
        if (s[l - 1] >= s[i - 1]) {
            l = i;
        }
        if ((s[i] - s[l - 1] > m) || (s[i] - s[l - 1] == m && rm - lm > i - l)) {
            m = s[i] - s[l - 1];
            lm = l;
            rm = i;
        }
    }
    cout << lm << endl << rm;
    return 0;
}



H	Объединение последовательностей

#include <bits/stdc++.h>

using namespace std;

int main() {
    long long n, i, j, p;
    cin >> n;
    i = 1;
    j = 1;
    for (int m = 0; m < n; m++) {
        if (i * i > j * j * j) {
            p = j * j * j;
            j += 1;
        } else {
            if (i * i < j * j * j) {
                p = i * i;
                i += 1;
            } else {
                p = i * i;
                i += 1;
                j += 1;
            }
        }
    }
    cout << p;
}



I	Город Че

#include <bits/stdc++.h>

using namespace std;

int main() {
    long long n, r, R, otv;
    vector<int> x;
    cin >> n >> r;
    for (int i = 0; i < n; i++) {
        cin >> R;
        x.push_back(R);
    }
    R = 0;
    otv = 0;
    for (int i = 0; i < n; i++) {
        while (R < n) {
            if (x[R] - x[i] > r) {
                otv += n - R;
                break;
            }
            R += 1;
        }
    }
    cout << otv;
}












