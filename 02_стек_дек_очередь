A	Правильная скобочная последовательность

#include <iostream>
#include <string>
#include <stack>

using namespace std;

int main() {
    stack <char> st;
    string a;
    cin >> a;
    for (int i = 0; i < a.size(); i++) {
        if (st.empty()) {
            st.push(a[i]);
        } else {
            if ((st.top() == '[') && (a[i] == ']') || (st.top() == '(') && (a[i] == ')') || (st.top() == '{') && (a[i] == '}')) {
                st.pop();
            } else {
                st.push(a[i]);
            }
        }
    }
    if (st.empty()) {
        cout << "yes";
    } else {
        cout << "no";
    }
    return 0;
}



B	Постфиксная запись

#include <bits/stdc++.h>

using namespace std;

int main() {
    string y;
    int a, b;
    stack<int> q;
    while (cin >> y) {
        if (y == "-" || y == "+" || y == "*") {
            if (y == "+") {
                a = q.top();
                q.pop();
                b = q.top();
                q.pop();
                q.push(b + a);
            } else {
                if (y == "*") {
                    a = q.top();
                    q.pop();
                    b = q.top();
                    q.pop();
                    q.push(a * b);
                } else {
                    a = q.top();
                    q.pop();
                    b = q.top();
                    q.pop();
                    q.push(b - a);
                }
            }
        } else {
            a = stoi(y);
            q.push(a);
        }
    }
    cout << q.top();
    return 0;
}



C	Шарики

#include <bits/stdc++.h>

using namespace std;

int main() {
    int x, otv;
    stack<int> a, b;
    otv = 0;
    while (cin >> x) {
        if (a.empty()) {
            a.push(x);
            b.push(1);
        } else {
            if (a.top() != x) {
                if (b.top() >= 3) {
                    otv += b.top();
                    a.pop();
                    b.pop();
                }
                if (a.top() == x) {
                    x = b.top();
                    b.pop();
                    b.push(x + 1);
                } else {
                    a.push(x);
                    b.push(1);
                }
            } else {
                x = b.top();
                b.pop();
                b.push(x + 1);
            }
        }
    }
    if (b.top() >= 3) {
        otv += b.top();
    }
    cout << otv;
    return 0;
}



E	Сумма Элементов

#include <bits/stdc++.h>

using namespace std;

int main() {
    queue <long long> val;
    deque <long long> col;
    vector <long long> z1;
    long long z, a, b, x, c;
    cin >> a;
    for (int i = 0; i < a; i++) {
        cin >> b;
        if (b == 1) {
            cin >> x >> c;
            val.push(x);
            col.push_back(c);
        } else {
            cin >> c;
            z = 0LL;
            while (c > 0) {
                if (col.front() <= c) {
                    z += col.front() * val.front();
                    c -= col.front();
                    col.pop_front();
                    val.pop();
                } else {
                    x = col.front() - c;
                    z += c * val.front();
                    col.pop_front();
                    col.push_front(x);
                    c = 0;
                }
            }
            z1.push_back(z);
        }
    }
    for (auto i : z1) {
        cout << i << "\n";
    }
    return 0;
}



F	Сортировка вагонов

#include <bits/stdc++.h>

using namespace std;

int main() {
    vector <int> v;
    queue <int> s1;
    stack <int> s2;
    int n, m, a, flag, b;
    cin >> n;
    for (int i = 0; i < n; i++) {
        cin >> m;
        s1.push(m);
    }
    m = 1;
    flag = 0;
    while (m <= n) {
        if (!s2.empty() && s2.top() == m) {
            v.push_back(2);
            s2.pop();
        } else {
            while (!s1.empty() && s1.front() != m) {
                s2.push(s1.front());
                v.push_back(1);
                s1.pop();
            }
            if (!s1.empty()) {
                s2.push(s1.front());
                v.push_back(1);
                s1.pop();
                v.push_back(2);
                s2.pop();
            } else {
                cout << 0;
                flag = 1;
                break;
            }
        }
        m += 1;
        if (flag == 1) {
            break;
        }
    }
    if (flag == 0) {
        // cout << v[1] << endl;
        a = v[0];
        m = 1;
        b = 1;
        for (int i = 1; i < v.size(); i++) {
            if  (v[i - 1] != v[i]) {
                b += 1;
            }
        }
        cout << b << "\n";
        for (int i = 1; i < v.size(); i++) {
            if (a == v[i]) {
                m += 1;
            } else {
                cout << a << " " << m << "\n";
                a = v[i];
                m = 1;
            }
        }
        cout << a << " " << m << "\n";
    }
    return 0;
}

